#!/bin/bash

start_time=$(date "+%s")

# Gibt eine Fehlermeldung aus und beendet das Skipt mit Fehlercode 1
error()
{
  echo "$@" 1>&2
  exit 1
}

USAGE="USAGE: build [OPTIONEN] [<srcpath>]
  -c Configure nicht aufrufen
  -d make dev-install aufrufen
  -b Build nicht starten
  -k Baue mit KDE3 (Standard ist KDE4)
  -w Windows-Build
  <srcpath> Pfad, in dem die Sourcen von LibreOffice liegen. Default ist das aktuelle Verzeichnis.
"

if [ "$1" == "--help" ]; then
  error "$USAGE"
fi

# Variablen zum Steuern des Builds
configure=1
build=1
devinst=""
enable_kde="kde4"
disable_kde="kde"
clean=0
MAKE='make'

while getopts bcdklw opt
  do case "$opt" in
  b) build=0;;
  c) configure=0;;
  d) devinst="dev-install";;
  k) enable_kde="kde"
     disable_kde="kde4";;
  l) clean=1;;
  w) windows=1
     MAKE='/opt/lo/bin/make';;
  [?]) error "$USAGE";;
  esac
done

shift $((OPTIND-1))

src=${1:-"."}
cd $src || error "Zielverzeichnis existiert nicht."

if [ ! -f ./autogen.sh ]; then
  error "$USAGE"
fi

do_configure()
{
  if [ "_$windows" = "_1" ]; then
    if [ -f  /cygdrive/c/EigeneProgramme/Java/Java1.7.0_45_32/bin/javac.exe ] ; then
      JDK_HOME="/cygdrive/c/EigeneProgramme/Java/Java1.7.0_45_32/"
    else
      echo "Kein JDK unter  /cygdrive/c/EigeneProgramme/Java/Java1.7.0_45_32/bin/ gefunden!"
    fi

    ./autogen.sh \
      --disable-online-update \
      --enable-extension-integration \
      --enable-ext-nlpsolver \
      --enable-ext-presenter-minimizer \
      --enable-ext-wiki-publisher \
      --enable-release-build \
      --with-ant-home=/cygdrive/c/ant \
      --with-build-version=${BUILD_NUMBER} \
      --with-help \
      --with-java \
      --with-jdk-home=${JDK_HOME} \
      --with-lang="en-US de fr es it pt " \
      --with-lang="en-US de fr es it pt" \
      --with-myspell-dicts \
      --without-junit \
      --with-system-dicts \
      --with-vendor="IT@m Landeshauptstadt München" \
      || echo autogen.sh ist fehlgeschlagen
  else
    if [ -f /usr/lib/j2sdk1.5-sun/bin/javac  ]; then
      JDK_HOME="/usr/lib/j2sdk1.5-sun"
    else
      JDK_HOME="/usr/lib/jvm/java-6-sun"
    fi

    ./autogen.sh \
      --disable-dbus \
      --disable-${disable_kde} \
      --disable-gconf \
      --disable-gnome-vfs \
      --disable-online-update \
      --disable-randr-link \
      --enable-${enable_kde}\
      --enable-epm \
      --enable-evolution2 \
      --enable-extension-integration \
      --enable-ext-nlpsolver \
      --enable-ext-presenter-minimizer \
      --enable-ext-wiki-publisher \
      --enable-lockdown \
      --enable-odk \
      --enable-python=internal \
      --enable-release-build \
      --with-build-version="${BUILD_NUMBER}" \
      --with-help \
      --with-java \
      --with-jdk-home=$JDK_HOME \
      --with-lang="en-US de fr es it pt" \
      --with-myspell-dicts \
      --without-afms \
      --without-doxygen \
      --without-fonts \
      --without-junit \
      --without-ppds \
      --with-package-format=deb \
      --with-system-curl \
      --with-system-dicts \
      --with-system-expat \
      --with-system-jpeg \
      --with-system-libxml \
      --with-system-sane \
      --with-system-zlib \
      --with-vendor="IT@M Landeshauptstadt München" \
      || error "autogen.sh fehlgeschlagen."
  fi

}

do_build() {
  "$MAKE" $devinst || error "$MAKE fehlgeschlagen."
}

echo "Startzeit: $(date)" | tee build.log

if [ "_$configure" = "_1" ]; then
  echo Configuring...
  do_configure 2>&1 | tee -a build.log
  ret=${PIPESTATUS[0]}
  if [ $ret -ne 0 ]; then
    exit $ret
  fi
fi

if [ "_$clean" = "_1" ]; then
  echo Cleaning...
  "$MAKE" clean 2>&1 | tee -a build.log
  ret=${PIPESTATUS[0]}
  if [ $ret -ne 0 ]; then
    exit $ret
  fi
fi

if [ "_$build" = "_1" ]; then
  echo Building...
  do_build 2>&1 | tee -a build.log
  ret=${PIPESTATUS[0]}
  if [ $ret -ne 0 ]; then
    exit $ret
  fi
fi

end_time=$(date "+%s")

time_diff=$(($end_time - $start_time))
minutes=$(($time_diff / 60))
hours=$(($minutes / 60))
minutes=$(($minutes - $hours * 60))

echo "Gesamtzeit für den Build: $hours Std. $minutes Min." | tee -a build.log
